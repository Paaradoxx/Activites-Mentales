a=randint(-6,6)
b=randint(-6,6)
c=randint(-6,6)
d=randint(-6,6)
e=randint(0,25)
f=randint(0,25)
g=randint(-6,6)
h=randint(-6,6)
while a==c and b==d and g==h:
    a=randint(-6,6)
    b=randint(-6,6)
    c=randint(-6,6)
    d=randint(-6,6)
    g=randint(-6,6)
    h=randint(-6,6)
while e==f or e==8 or e==9 or e==14 or f==8 or f==9 or f==14 :
    e=randint(0,25)
    f=randint(0,25)
L=list(string.ascii_uppercase)
A=L[e]
B=L[f]
self.frame_init()
self.add("Calculer la distance entre le point $",False)
self.add(L[e],False)
self.add('(',False)
self.add_nombre(a,False)
self.add("~;~",False)
self.add_nombre(b,False)
self.add("~;~",False)
self.add_nombre(g,False)
self.add(")$ et le point $ ",False)
self.add(L[f],False)
self.add("(",False)
self.add_nombre(c,False)
self.add("~;~",False)
self.add_nombre(d,False)
self.add("~;~",False)
self.add_nombre(h,False)
self.add(")$.",False)

self.add('On a $')
self.add(A)
self.add('(')
self.add_nombre(a)
self.add("~;~")
self.add_nombre(b)
self.add("~;~")
self.add_nombre(g)
self.add(")$ et $")
self.add(B)
self.add("(")
self.add_nombre(c)
self.add("~;~")
self.add_nombre(d)
self.add("~;~")
self.add_nombre(h)
self.add(")$.\n\n\medskip\n\n")
self.add("La distance entre les deux points est donn√©e par la formule : \\begin{align*} ")
self.add(L[e])
self.add(L[f])
self.add(" &=\sqrt{(x_")
self.add(L[e])
self.add("-x_")
self.add(L[f])
self.add(")^2 + (y_")
self.add(L[e])
self.add("-y_")
self.add(L[f])
self.add(")^2 + (z_")
self.add(L[e])
self.add("-z_")
self.add(L[f])
self.add(")^2} \\\\ &= \\sqrt{(")
self.add_nombre(a)
self.add("-")
self.add_nombre_produit(c)
self.add(")^2 + (")
self.add_nombre(b)
self.add("-")
self.add_nombre_produit(d)
self.add(")^2 + (")
self.add_nombre(g)
self.add("-")
self.add_nombre_produit(h)
self.add(")^2} \\\\ &= \\sqrt{")
self.add_nombre_produit(a-c)
self.add("^2 +")
self.add_nombre_produit(b-d)
self.add("^2 +")
self.add_nombre_produit(g-h)
self.add("^2} \\\\ &= \\sqrt{")
self.add_nombre((a-c)**2)
self.add("+")
self.add_nombre((b-d)**2)
self.add("+")
self.add_nombre((g-h)**2)
self.add("} \\\\ &= \\sqrt{")
self.add_nombre((a-c)**2+(b-d)**2+(g-h)**2)
self.add("} ")
i, j = simplification_racine(1, (a-c)**2+(b-d)**2+(g-h)**2)
if i==1 and j!=1 :
    self.add(" \\end{align*}")
elif j==1 :
    self.add("\\\\ &= ")
    self.add_nombre(i)
    self.add("\\end{align*}")
else :
    self.add(" \\\\ &=")
    self.add_nombre(i)
    self.add(" \\sqrt{")
    self.add_nombre(j)
    self.add("} \\end{align*}")

self.frame_end()