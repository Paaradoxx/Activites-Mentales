a=randint(2,15)
b=randint(3,7)
c=randint(3,7)
e=randint(0,3)
while b==5:
    b=randint(3,7)
while c==5:
    c=randint(3,7)
self.frame_init()
self.add("On considère ",False)
self.add_nombre(100*a,False) 
self.add(" personnes pouvant appartenir au groupe A ou au groupe B, les deux ou aucun des deux. On trouve que \n \\begin{itemize} \n \\item ",False)
if e==0 :
    self.add_nombre(b*10,False)
    self.add("\\%  des personnes appartiennent au groupe B; \n \\item ",False)
    self.add_nombre(c*10,False)
    self.add("\\% des personnes n'appartiennent pas au groupe A; \n \\item ",False)
    self.add_nombre(10*a*b-a*b*c,False)
    self.add(" sont dans les deux groupes.",False)
elif e==1: 
    self.add_nombre((10-b)*10,False)
    self.add("\\%  des personnes n'appartiennent pas au groupe B; \n \\item ",False)
    self.add_nombre(c*10,False)
    self.add("\\% des personnes n'appartiennent pas au groupe A; \n \\item ",False)
    self.add_nombre(10*a*c-a*c*b,False)
    self.add(" sont dans aucun des deux groupes.",False)
elif e==2:
    self.add_nombre(b*10,False)
    self.add("\\%  des personnes appartiennent au groupe B; \n \\item ",False)
    self.add_nombre((10-c)*10,False)
    self.add("\\% des personnes appartiennent au groupe A; \n \\item ",False)
    self.add_nombre(a*100-a*c*10-(10*a*b-a*b*c),False)
    self.add(" sont dans A mais pas dans B.",False)
elif e==3:
    self.add_nombre(b*10,False)
    self.add("\\%  des personnes appartiennent au groupe B; \n \\item ",False)
    self.add_nombre((10-c)*10,False)
    self.add("\\% des personnes appartiennent au groupe A; \n \\item ",False)
    self.add_nombre(a*b*c,False)
    self.add(" sont dans B mais pas dans A.",False)

self.add("\n \\end{itemize} \n \\begin{enumerate} \n \\item Compléter le tableau suivant : \n \\hfil \\begin{tabular}{|c|c|c|c|} \n \\cline{2-4}   \n \\multicolumn{1}{c|}{} & $A$ & $\\overline{A}$ & Total\\\ \\hline \n $B$  &    & &   \\\\\hline \n $\\overline{B}$   &  &    &    \\\\\hline	\n Total   & &  &  \\\\\hline  \n \\end{tabular} \n ",False)

self.add("\\begin{center} \n \\begin{tabular}{|c|c|c|c|} \n \\cline{2-4} \n \\multicolumn{1}{c|}{} & A & $\\overline{A}$ & Total \\\\\hline \n B   &")
self.add_nombre(10*a*b-a*b*c)
self.add("  &")
self.add_nombre(a*b*c) 
self.add("& ")
self.add_nombre(10*a*b) 
self.add(" \\\\\hline \n $\\overline{B}$   &")
self.add_nombre(a*100-a*c*10-(10*a*b-a*b*c)) 
self.add(" & ")
self.add_nombre(10*a*c-a*c*b)
self.add(" & ")
self.add_nombre(100*a-10*a*b) 
self.add(" \\\\\hline \n Total   &")
self.add_nombre(a*100-a*c*10) 
self.add("&")
self.add_nombre(10*a*c) 
self.add(" &")
self.add_nombre(100*a) 
self.add(" \\\\\hline  \n \\end{tabular} \n \\end{center}")

if e==0:
    self.add("\\item Calculer la proportion de personnes n'appartenant à aucun des deux groupes. \n \\item Calculer la proportion de personnes n'appartenant pas à A mais appartenant à B parmi les personnes n'appartenant pas à A. \n  \\end{enumerate} \n ",False)

    F=Fraction(10*a*c-a*c*b,a*100)
    G=Fraction(c*a*b,a*c*10)
    
    self.add("\n La proportion de personnes n'appartenant à aucun des deux groupes est de $\dfrac{")
    self.add_nombre(10*a*c-a*c*b)
    self.add("}{")
    self.add_nombre(100*a) 
    self.add(" }= ")
    self.add_frac(F) 
    self.add("$\n \\\ La proportion de personnes n'appartenant pas à A mais appartenant à B parmi les personnes n'appartenant pas à A est de $\dfrac{")
    self.add_nombre(c*a*b)
    self.add("}{")
    self.add_nombre(10*a*c) 
    self.add(" }= ")
    self.add_frac(G) 
    self.add("$\n")
elif e==1:
    self.add("\\item Calculer la proportion de personnes n'appartenant  à aucun des deux groupes. \n \\item Calculer la proportion de personnes n'appartenant pas à B mais appartenant à A parmi les personnes n'appartenant pas à B. \n  \\end{enumerate} \n ",False)

    F=Fraction(10*a*b-a*b*c,a*100)
    G=Fraction(a*100-a*c*10-(10*a*b-a*b*c),100*a-10*a*b)
    
    self.add("\n La proportion de personnes n'appartenant à aucun des deux groupes est de $\dfrac{")
    self.add_nombre(10*a*b-a*b*c)
    self.add("}{")
    self.add_nombre(100*a) 
    self.add(" }= ")
    self.add_frac(F) 
    self.add("$\n \\\ La proportion de personnes n'appartenant pas à B mais appartenant à A parmi les personnes n'appartenant pas à B est de $\dfrac{")
    self.add_nombre(a*100-a*c*10-(10*a*b-a*b*c))
    self.add("}{")
    self.add_nombre(100*a-10*a*b) 
    self.add(" }= ")
    self.add_frac(G) 
    self.add("$\n")

elif e==2:
    self.add("\\item Calculer la proportion de personnes n'appartenant pas à A mais appartenant à B. \n \\item Calculer la proportion de personnes appartenant à B et A parmi les personnes appartenant à B. \n  \\end{enumerate} \n ",False)

    F=Fraction(a*b*c,a*100)
    G=Fraction(10*a*b-a*b*c,10*a*b)
    
    self.add("\n La proportion de personnes n'appartenant pas à A mais appartenant à B est de $\dfrac{")
    self.add_nombre(a*b*c)
    self.add("}{")
    self.add_nombre(100*a) 
    self.add(" }= ")
    self.add_frac(F) 
    self.add("$\n \\\ La proportion de personnes appartenant à B et A parmi les personnes appartenant à B est de $\dfrac{")
    self.add_nombre(10*a*b-a*b*c)
    self.add("}{")
    self.add_nombre(10*a*b) 
    self.add(" }= ")
    self.add_frac(G) 
    self.add("$\n")

elif e==3:
    self.add("\\item Calculer la proportion de personnes n'appartenant pas à B mais appartenant à A. \n \\item Calculer la proportion de personnes appartenant à B et A parmi les personnes appartenant à A. \n  \\end{enumerate} \n ",False)

    F=Fraction(a*100-a*c*10-(10*a*b-a*b*c),a*100)
    G=Fraction(10*a*b-a*b*c,a*100-a*c*10)
    
    self.add("\n La proportion de personnes n'appartenant pas à B mais appartenant à A est de $\dfrac{")
    self.add_nombre(a*100-a*c*10-(10*a*b-a*b*c))
    self.add("}{")
    self.add_nombre(100*a) 
    self.add(" }= ")
    self.add_frac(F) 
    self.add("$\n \\\ La proportion de personnes appartenant à B et A parmi les personnes appartenant à A est de $\dfrac{")
    self.add_nombre(10*a*b-a*b*c)
    self.add("}{")
    self.add_nombre(a*100-a*c*10) 
    self.add(" }= ")
    self.add_frac(G) 
    self.add("$\n")
self.frame_end()
            