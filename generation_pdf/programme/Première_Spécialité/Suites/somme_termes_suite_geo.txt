d = randint(0, 4)
p = randint(8, 40)
n = randint(p + 8, p + 40)
r = randint(2, 25)
if randint(0, 1) == 1:
    r = -r
u = randint(-30, 30)
while u == 0:    
    u = randint(-30, 30)

self.frame_init()
self.add("Soit $(u_n)_{n\\in\\mathbb{N}}$ une suite géométrique de raison $q = ", cor = False)
self.add_nombre(r, cor = False)
self.add("$ et de premier terme $u_", cor=False)
self.add_nombre(d, cor = False)
self.add(" = ", cor=False)
self.add_nombre(u, cor = False)
self.add("$.\n\nCalculer $\\displaystyle\\sum_{k=", cor=False)
self.add_nombre(p, cor = False)
self.add("}^{", cor=False)
self.add_nombre(n, cor = False)
self.add("}u_k$.", cor=False)

self.add("Comme $(u_n)_{n\\in\\mathbb{N}}$ est une suite géométrique de raison $q = ")
self.add_nombre(r)
self.add(" \\neq 1$ et de premier terme $u_")
self.add_nombre(d)
self.add("=")
self.add_nombre(u)
self.add("$.\n\n On a\n\n\\begin{align*}")
self.add("\\displaystyle\\sum_{k=")
self.add_nombre(p)
self.add("}^{")
self.add_nombre(n)
self.add("} u_k &= u_{")
self.add_nombre(p)
self.add("}\\times \\dfrac{1-q^{")
self.add_nombre(n)
self.add_nombre_somme(-p)
self.add_nombre_somme(1)
self.add("}}{1-q} \\\\\n\t&=")
self.add_nombre_produit(u)
self.add("\\times ")
self.add_nombre_produit(r)
self.add("^{")
self.add_nombre(p)
self.add_nombre_somme(-d)
self.add("}\\times \\dfrac{1-")
self.add_nombre_produit(r)
self.add("^{")
self.add_nombre(n-p+1)
self.add("}}{")
self.add_nombre(1-r)
self.add("}")
self.add("\n\\end{align*}")

self.frame_end()