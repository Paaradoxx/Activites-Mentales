n = randint(-100, 100)
while n == 0:
    n = randint(-100, 100)
nn = n
n = n/100
u = randint(20, 80)/100

if n < 0:
    variation = " croissante "
else:
    variation = "décroissante "

self.frame_init()
self.add("On considère la suite $(u_n)_{n\\in\\mathbb{N}}$ définie par la relation de récurrence suivante:\\[\\begin{cases} u_{n+1} = ", False)
self.add_coef(n, cor = False)
self.add("u_n^2", False)
self.add_nombre_somme(1-n, cor = False)
self.add("u_n\\\\[1em] u_0 = ", False)
self.add_nombre(u, cor = False)
self.add("\\end{cases}.\\]\n\nOn pose pour tout $x \\in [0;1], f(x) = ", cor = False)
self.add_coef(n, cor = False)
self.add("x^2", False)
self.add_nombre_somme(1-n, cor = False)
self.add("x$.", False)
self.add("\n\n\\begin{enumerate}\n\t", False)
if n < 0:
    self.add("\\item Étudier les variations de $f$ sur $[0;1]$.\n\t", False)
    self.add("\\item Démontrer que pour tout $n \\in \\mathbb{N}, ~0 \\leq u_n \\leq 1$.\n\t", False)
    self.add("\\item Démontrer que $(u_n)_{n\\in\\mathbb{N}}$ est décroissante.\n\t", False)
    self.add("\\item En déduire finalement que $(u_n)_{n\\in\\mathbb{N}}$ est une suite convergente.\n", False)
else:
    self.add("\\item Étudier les variations de $f$ sur $[0;1]$.\n\t", False)
    self.add("\\item Démontrer que pour tout $n \\in \\mathbb{N}, ~0 \\leq u_n \\leq 1$.\n\t", False)
    self.add("\\item Démontrer que $(u_n)_{n\\in\\mathbb{N}}$ est croissante.\n\t", False)
    self.add("\\item En déduire finalement que $(u_n)_{n\\in\\mathbb{N}}$ est une suite convergente.\n", False)
self.add("\\end{enumerate}\n", False)

self.add("On a $\\begin{cases} u_{n+1} = ")
self.add_coef(n)
self.add("u_n^2")
self.add_nombre_somme(1-n)
self.add("u_n\\\\[1em] u_0 = ")
self.add_nombre(u)
self.add("\\end{cases}$ et $f(x) = ")
self.add_coef(n)
self.add("x^2")
self.add_nombre_somme(1-n)
self.add("x$.")
self.add("\n\n\\begin{enumerate}\n\t\\item $f$ est une fonction définie et dérivable sur $[0;1]$. On a \\[\\forall x \\in [0;1], ~ f'(x) = ")
self.add_coef(2*n)
self.add("x")
self.add_nombre_somme(1-n)
self.add("\\]\n\n Or $f'(x) \\geq 0$ sur $[0;1]$ (étude du signe à réaliser). \n\nLa fonction $f$ est donc croissante sur $[0;1]$.\n\n\\end{enumerate}\n\\end{frame}\n\n\n\\begin{frame}")
self.add("On a $\\begin{cases} u_{n+1} = ")
self.add_coef(n)
self.add("u_n^2")
self.add_nombre_somme(1-n)
self.add("u_n\\\\[1em] u_0 = ")
self.add_nombre(u)
self.add("\\end{cases}$ et $f(x) = ")
self.add_coef(n)
self.add("x^2")
self.add_nombre_somme(1-n)
self.add("x$.\n\n\\begin{enumerate}\setcounter{enumi}{1}\n\n\t\\item On pose pour tout entier $n \\in \\mathbb{N}$ l'hypothèse de récurrence $H_n:~\"0 \\leq u_n \\leq 1\"$.\n\n\\medskip\n\nInitialisation: On a $u_0 =")
self.add_nombre(u)
self.add(" \\in [0;1]$, donc $H_0$ est vraie.\n\n\\medskip\n\nHérédité: Supposons $H_k$ vraie pour \\textbf\\underline{{$k$ fixé}} et montrons que $H_{k+1}$ est vraie. C'est-à-dire, montrons que si $0 \\leq u_k \\leq 1$ alors $0 \\leq u_{k+1} \\leq 1$.\n\n Par croissance de la fonction $f$ sur l'intervalle $[0;1]$, on a \\[0\\leq u_k \\leq 1 \\quad \\Rightarrow \\quad f(0) \\leq f(u_k) \\leq f(1).\\]\n\n Or $f(0) = 0$, $f(1) = ")
self.add_nombre(n)
self.add("\\times 1^2")
self.add_nombre_somme(1-n)
self.add("= 1$ et $f(u_k) = u_{k+1}$.\n\n Finalement $0\\leq u_k \\leq 1 \\Rightarrow 0 \\leq u_{k+1} \\leq 1$. Donc $H_{k} \\Rightarrow H_{k+1}$.\n\n On a finalement démontré par récurrence que pour tout $n \\in\\mathbb{N},~ 0 \\leq u_n \\leq 1$.\n\n\\end{enumerate}\n\\end{frame}\n\n\n\\begin{frame}")
self.add("On a $\\begin{cases} u_{n+1} = ")
self.add_coef(n)
self.add("u_n^2")
self.add_nombre_somme(1-n)
self.add("u_n\\\\[1em] u_0 = ")
self.add_nombre(u)
self.add("\\end{cases}$ et $f(x) = ")
self.add_coef(n)
self.add("x^2")
self.add_nombre_somme(1-n)
self.add("x$.\n\n\\begin{enumerate}\setcounter{enumi}{2}\n\n\t\\item On pose pour tout entier $n \\in \\mathbb{N}$ l'hypothèse de récurrence $H_n:~\" u_n ")
if n < 0:
    self.add("\\leq ")
else:
    self.add("\\geq ")
self.add("u_{n+1}\"$.\n\n\\medskip\n\nInitialisation: On a $u_0 =")
self.add_nombre(u)
self.add("$ et $u_1 = ")
self.add_nombre(n)
self.add("\\times")
self.add_nombre(u)
self.add("^2+")
self.add_nombre_produit(1-n)
self.add("\\times")
self.add_nombre(u)
self.add(" = ")
self.add_nombre(n*u**2+(1-n)*u)
if n > 0:
    self.add("\\leq ")
else:
    self.add("\\geq ")
self.add_nombre(u)



self.add("$ , donc $H_0$ est vraie.\n\n\\medskip\n\nHérédité: Supposons $H_k$ vraie pour \\textbf\\underline{{$k$ fixé}} et montrons que $H_{k+1}$ est vraie. C'est-à-dire, montrons que si $u_k ")
if n < 0:
    self.add("\\leq ")
else:
    self.add("\\geq ")
self.add(" u_{k+1}$ alors $u_{k+1} ")
if n < 0:
    self.add("\\leq ")
else:
    self.add("\\geq ")
self.add(" u_{k+2}$.\n\n Par croissance de la fonction $f$ sur l'intervalle $[0;1]$ et puisque les termes en jeu sont dans $[0;1]$, on a \\[ u_k ")
if n < 0:
    self.add("\\leq ")
else:
    self.add("\\geq ")
self.add("u_{k+1} \\quad \\Rightarrow \\quad f(u_k) ")
if n < 0:
    self.add("\\leq ")
else:
    self.add("\\geq ")
self.add(" f(u_{k+1}) \\quad \\Rightarrow \\quad  u_{k+1}")
if n < 0:
    self.add("\\leq ")
else:
    self.add("\\geq ")
self.add("u_{k+2}. \\]\n\nDonc $H_{k} \\Rightarrow H_{k+1}$.\n\n On a finalement démontré par récurrence que pour tout $n \\in\\mathbb{N},~ u_n ")
if n < 0:
    self.add("\\leq ")
else:
    self.add("\\geq ")
self.add("u_{n+1}$ et donc $(u_n)_{n\\in\\mathbb{N}}$ est " + variation + ".")




self.add("\n\n\\end{enumerate}\n\\end{frame}\n\n\n\\begin{frame}\n\n\\begin{enumerate}\setcounter{enumi}{3}\n\n\t\\item ")
if n < 0:
    self.add("D'après les questions $3)$ et $2)$ , $(u_n)_{n\\in\\mathbb{N}}$ est croissante et majorée. Donc d'après le théorème de convergence monotone, $(u_n)_{n\\in\\mathbb{N}}$ converge.")
else:
    self.add("D'après les questions $3)$ et $2)$ , $(u_n)_{n\\in\\mathbb{N}}$ est décroissante et minorée. Donc d'après le théorème de convergence monotone, $(u_n)_{n\\in\\mathbb{N}}$ converge.")
self.add("\n\n\\end{enumerate}")
self.frame_end()