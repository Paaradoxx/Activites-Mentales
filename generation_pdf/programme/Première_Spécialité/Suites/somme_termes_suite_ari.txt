d = randint(0, 4)
p = randint(8, 40)
n = randint(p + 8, p + 40)
r = randint(2, 25)
if randint(0, 1) == 1:
    r = -r
u = randint(-30, 30)        
self.frame_init()
self.add("Soit $(u_n)_{n\\in\\mathbb{N}}$ une suite arithmétique de raison $r = ", cor = False)
self.add_nombre(r, cor = False)
self.add("$ et de premier terme $u_", cor=False)
self.add_nombre(d, cor = False)
self.add(" = ", cor=False)
self.add_nombre(u, cor = False)
self.add("$.\n\nCalculer $\\displaystyle\\sum_{k=", cor=False)
self.add_nombre(p, cor = False)
self.add("}^{", cor=False)
self.add_nombre(n, cor = False)
self.add("}u_k$.", cor=False)

self.add("Comme $(u_n)_{n\\in\\mathbb{N}}$ est une suite arithmétique de raison $r = ")
self.add_nombre(r)
self.add("$ et de premier terme $u_")
self.add_nombre(d)
self.add("=")
self.add_nombre(u)
self.add("$.\n\n On a $u_{")
self.add_nombre(p)
self.add("}")
if d == 0:
    self.add("= u_0 + ")
    self.add_nombre(p)
    self.add("\\times r = ")
    self.add_nombre(u)
    self.add_nombre_somme(p)
    self.add("\\times")
    self.add_nombre_produit(r)
    self.add(" = ")
    self.add_nombre(u+p*r)
    self.add("$ \n\n et $u_{")
    self.add_nombre(n)
    self.add("} = u_0 + ")
    self.add_nombre(n)
    self.add("\\times r = ")
    self.add_nombre(u)
    self.add_nombre_somme(n)
    self.add("\\times")
    self.add_nombre_produit(r)
    self.add(" = ")
    self.add_nombre(u+n*r)
    self.add("$.")
else:
    self.add("= u_")
    self.add_nombre(d)
    self.add("+(")
    self.add_nombre(p)
    self.add_nombre_somme(-d)
    self.add(")\\times r = ")
    self.add_nombre(u)
    self.add_nombre_somme(p-d)
    self.add("\\times")
    self.add_nombre_produit(r)
    self.add(" = ")
    self.add_nombre(u+(p-d)*r)
    self.add("$ \n\n et $u_{")
    self.add_nombre(n)
    self.add("} = u_0 + ")
    self.add_nombre(n)
    self.add("\\times r = ")
    self.add_nombre(u)
    self.add("(")
    self.add_nombre(n)
    self.add_nombre_somme(-d)
    self.add(")\\times")
    self.add_nombre_produit(r)
    self.add(" = ")
    self.add_nombre(u+(n-d)*r)
    self.add("$.")
self.add("\n\nOn a alors\n\n\\begin{align*}")
self.add("\\displaystyle\\sum_{k=")
self.add_nombre(p)
self.add("}^{")
self.add_nombre(n)
self.add("} u_k &= (")
self.add_nombre(n)
self.add_nombre_somme(-p)
self.add_nombre_somme(1)
self.add(") \\times \\dfrac{u_{")
self.add_nombre(p)
self.add("}+u_{")
self.add_nombre(n)
self.add("}}{2}\\\\\n\t&=")
self.add_nombre(n-p+1)
self.add("\\times \\dfrac{")
self.add_nombre(u+p*r)
self.add("+")
self.add_nombre_produit(u+n*r)
self.add("}{2}\\\\\n\t&=")
self.add_nombre(int((n-p+1)*(u+p*r + u+n*r)/2))
self.add("\n\\end{align*}")

self.frame_end()